{"ast":null,"code":"var _jsxFileName = \"D:\\\\college-management\\\\src\\\\components\\\\StudentLogin.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../styles/StudentLogin.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentLogin = () => {\n  _s();\n  const [rollNo, setRollNo] = useState(\"\");\n  const [dob, setDob] = useState(\"\");\n  const [error, setError] = useState(\"\"); // For error messages\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault(); // Prevent page reload\n\n    try {\n      const payload = {\n        rollNumber: rollNo,\n        dob\n      };\n      console.log(\"Sending login request:\", payload);\n      const response = await axios.post(\"http://localhost:5000/api/students/login\", payload);\n      console.log(\"Login successful:\", response.data);\n      alert(\"Login successful!\");\n      navigate(\"/studen\"); // Navigate to the student dashboard or relevant page\n    } catch (error) {\n      var _error$response;\n      console.error(\"Error during login:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      setError(\"Invalid roll number or date of birth. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"student-login-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Student Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Roll Number\",\n      value: rollNo,\n      onChange: e => setRollNo(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      placeholder: \"Date of Birth\",\n      value: dob,\n      onChange: e => setDob(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentLogin, \"uRSRco3gm/oKI5r/SxeR99CPbHc=\", false, function () {\n  return [useNavigate];\n});\n_c = StudentLogin;\nexport default StudentLogin;\nvar _c;\n$RefreshReg$(_c, \"StudentLogin\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","StudentLogin","_s","rollNo","setRollNo","dob","setDob","error","setError","navigate","handleSubmit","e","preventDefault","payload","rollNumber","console","log","response","post","data","alert","_error$response","message","onSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["D:/college-management/src/components/StudentLogin.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../styles/StudentLogin.css\";\r\n\r\nconst StudentLogin = () => {\r\n  const [rollNo, setRollNo] = useState(\"\");\r\n  const [dob, setDob] = useState(\"\");\r\n  const [error, setError] = useState(\"\"); // For error messages\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault(); // Prevent page reload\r\n\r\n    try {\r\n      const payload = { rollNumber: rollNo, dob };\r\n      console.log(\"Sending login request:\", payload);\r\n\r\n      const response = await axios.post(\"http://localhost:5000/api/students/login\", payload);\r\n      console.log(\"Login successful:\", response.data);\r\n\r\n      alert(\"Login successful!\");\r\n      navigate(\"/studen\"); // Navigate to the student dashboard or relevant page\r\n    } catch (error) {\r\n      console.error(\"Error during login:\", error.response?.data || error.message);\r\n      setError(\"Invalid roll number or date of birth. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"student-login-form\">\r\n      <h1><strong>Student Login</strong></h1>\r\n      {error && <p className=\"error-message\">{error}</p>}\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Roll Number\"\r\n        value={rollNo}\r\n        onChange={(e) => setRollNo(e.target.value)}\r\n        required\r\n      />\r\n      <input\r\n        type=\"date\"\r\n        placeholder=\"Date of Birth\"\r\n        value={dob}\r\n        onChange={(e) => setDob(e.target.value)}\r\n        required\r\n      />\r\n      <button type=\"submit\">Login</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default StudentLogin;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}