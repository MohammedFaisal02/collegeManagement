{"ast":null,"code":"var _jsxFileName = \"D:\\\\college-management\\\\src\\\\components\\\\StudentLogin.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport '../styles/StudentLogin.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentLogin = () => {\n  _s();\n  const [rollNo, setRollNo] = useState('');\n  const [dob, setDob] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:5000/api/students/login', {\n        rollNumber: rollNo,\n        dob: dob\n      });\n      console.log(\"Server Response:\", response.data);\n      if (response.data.success) {\n        lconsole.log(\"Navigating to /student-dashboard\");\n        localStorage.setItem('studentRollNo', rollNo);\n        localStorage.setItem('studentDob', dob);\n        navigate('/student-dashboard');\n      } else {\n        setError(response.data.message || 'Invalid credentials');\n      }\n    } catch (error) {\n      if (error.response) {\n        console.error(\"Error Response:\", error.response.data);\n        setError(error.response.data.message || 'Login failed. Please try again.');\n      } else {\n        console.error(\"Error during login:\", error.message);\n        setError('Unable to connect to the server.');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Student Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Roll Number\",\n      value: rollNo,\n      onChange: e => setRollNo(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      placeholder: \"Date of Birth\",\n      value: dob,\n      onChange: e => setDob(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 7\n  }, this);\n};\n_s(StudentLogin, \"m7vVSnnJkRy8FS7aMy2Gpvd5mwc=\", false, function () {\n  return [useNavigate];\n});\n_c = StudentLogin;\nexport default StudentLogin;\nvar _c;\n$RefreshReg$(_c, \"StudentLogin\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","StudentLogin","_s","rollNo","setRollNo","dob","setDob","error","setError","navigate","handleSubmit","e","preventDefault","response","post","rollNumber","console","log","data","success","lconsole","localStorage","setItem","message","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","required","className","_c","$RefreshReg$"],"sources":["D:/college-management/src/components/StudentLogin.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../styles/StudentLogin.css';\r\n\r\nconst StudentLogin = () => {\r\n    const [rollNo, setRollNo] = useState('');\r\n    const [dob, setDob] = useState('');\r\n    const [error, setError] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n    \r\n        try {\r\n            const response = await axios.post('http://localhost:5000/api/students/login', {\r\n                rollNumber: rollNo,\r\n                dob: dob,\r\n            });\r\n    \r\n            console.log(\"Server Response:\", response.data);\r\n    \r\n            if (response.data.success) {\r\n                lconsole.log(\"Navigating to /student-dashboard\");\r\n                localStorage.setItem('studentRollNo', rollNo);\r\n                localStorage.setItem('studentDob', dob);\r\n                navigate('/student-dashboard');\r\n            } else {\r\n                setError(response.data.message || 'Invalid credentials');\r\n            }\r\n        } catch (error) {\r\n            if (error.response) {\r\n                console.error(\"Error Response:\", error.response.data);\r\n                setError(error.response.data.message || 'Login failed. Please try again.');\r\n            } else {\r\n                console.error(\"Error during login:\", error.message);\r\n                setError('Unable to connect to the server.');\r\n            }\r\n        }\r\n    };\r\n    \r\n\r\n    return (\r\n      <form onSubmit={handleSubmit}>\r\n          <h1><strong>Student Login</strong></h1>\r\n          <input\r\n              type=\"text\"\r\n              placeholder=\"Roll Number\"\r\n              value={rollNo}\r\n              onChange={(e) => setRollNo(e.target.value)}\r\n              required\r\n          />\r\n          <input\r\n              type=\"date\"\r\n              placeholder=\"Date of Birth\"\r\n              value={dob}\r\n              onChange={(e) => setDob(e.target.value)}\r\n              required\r\n          />\r\n          <button type=\"submit\">Login</button>\r\n          {error && <p className=\"error\">{error}</p>}\r\n      </form>\r\n  );\r\n};\r\n\r\nexport default StudentLogin;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}